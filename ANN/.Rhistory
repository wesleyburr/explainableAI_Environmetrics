tab.R2=tab.fit %>%
dplyr::filter(date > date.in) %>%
summarise(R2=cor(value,fit)^2) %>% pull
## metrics only for May
tab.MSPE.May=tab.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.R2.May=tab.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
summarise(R2=cor(value,fit)^2) %>% pull
### skill score using persistence fits as baseline
pers.fit=read.csv(paste0("outputs/persistence_fits.csv"))
pers.MSPE=pers.fit %>%
dplyr::filter(date > date.in) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
pers.MSPE.May=pers.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.metrics=data.frame(period=c("ALL months","May"),
MSPE=c(tab.MSPE,tab.MSPE.May),R2=c(tab.R2,tab.R2.May)
,skill=c(1 - tab.MSPE/pers.MSPE,1 - tab.MSPE.May/pers.MSPE.May))
write.csv(tab.metrics,paste0("metrics/",model_name,"_metrics.csv"),row.names = F,quote = F)
## scatterplot of fits
png(paste0("figures/",model_name,"_fits.png"),width = 480, height = 360)
p=ggplot(tab.fit,aes(x=value,y=fit,col=year(date))) +
geom_point(alpha=0.5) +
scale_color_viridis_c(direction=-1) +
geom_abline(slope=1) +
labs(col="year",y= "fit (in mm.)", x = "true value (in mm.)")
print(p)
dev.off()
## scatterplot of fits for May
png(paste0("figures/",model_name,"_fits_May.png"),width = 480, height = 360)
p=ggplot(tab.fit %>% dplyr::filter(month(date)==5),aes(x=value,y=fit,col=year(date))) +
geom_point(alpha=0.5) +
scale_color_viridis_c(direction=-1) +
geom_abline(slope=1) +
labs(col="year",y= "fit (in mm.)", x = "true value (in mm.)")
print(p)
dev.off()
##### plot MSPE (all months and May) by corn belt location
tab.fit.byloc=tab.fit %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
tab.fit.byloc.all = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc) %>%
mutate(months="All months")
tab.fit.byloc.May=tab.fit %>%
dplyr::filter(month(date)==5) %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
tab.fit.byloc.all.May = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc.May) %>%
mutate(months="May")
png(paste0("figures/",model_name,"_mspe_byloc.png"),width=960,height=360)
p=rbind(tab.fit.byloc.all,tab.fit.byloc.all.May) %>%
ggplot() +
geom_point(aes(x=Lon,y=Lat,col=MSPE)) +
scale_color_viridis_c(direction=1) +
facet_wrap(. ~ months)
print(p)
dev.off()
}
#metrics_gen("persistence")
#metrics_gen("climatology")
#metrics_gen("funclm")
metrics_gen( "ANN2014" )
setwd("~/GitHub/explainableAI_Environmetrics/ANN")
library(tidyverse)
library(fields)
library(broom)
library(gridExtra)
library(glmnet)
library(lubridate)
library(modelr)
theme_set(theme_classic(base_size = 25))
SoilMoisture.all <- read.csv("../Soil.csv", header = T) %>%
tibble::rowid_to_column("sm_loc_id")
### in-sample period
date.in = ymd("2013-12-31")
### function that inputs a model name and
### outputs table of metrics (RMSE, R2, skill),
### scatter plot of fits for that model, and MSPE by location
### for all hold-out data (Jan 2014 onwards) and
### also only for the month of May
metrics_gen=function(model_name){
tab.fit=read.csv(paste0("outputs/",model_name,"_fits.csv"))
tab.fit$date <- as.Date( tab.fit$date, '%m/%d/%Y' )
## MSPE and R2
tab.MSPE=tab.fit %>%
dplyr::filter(date > date.in) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.R2=tab.fit %>%
dplyr::filter(date > date.in) %>%
summarise(R2=cor(value,fit)^2) %>% pull
## metrics only for May
tab.MSPE.May=tab.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.R2.May=tab.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
summarise(R2=cor(value,fit)^2) %>% pull
### skill score using persistence fits as baseline
pers.fit=read.csv(paste0("outputs/persistence_fits.csv"))
pers.MSPE=pers.fit %>%
dplyr::filter(date > date.in) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
pers.MSPE.May=pers.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.metrics=data.frame(period=c("ALL months","May"),
MSPE=c(tab.MSPE,tab.MSPE.May),R2=c(tab.R2,tab.R2.May)
,skill=c(1 - tab.MSPE/pers.MSPE,1 - tab.MSPE.May/pers.MSPE.May))
write.csv(tab.metrics,paste0("metrics/",model_name,"_metrics.csv"),row.names = F,quote = F)
## scatterplot of fits
png(paste0("figures/",model_name,"_fits.png"),width = 480, height = 360)
p=ggplot(tab.fit,aes(x=value,y=fit,col=year(date))) +
geom_point(alpha=0.5) +
scale_color_viridis_c(direction=-1) +
geom_abline(slope=1) +
labs(col="year",y= "fit (in mm.)", x = "true value (in mm.)")
print(p)
dev.off()
## scatterplot of fits for May
png(paste0("figures/",model_name,"_fits_May.png"),width = 480, height = 360)
p=ggplot(tab.fit %>% dplyr::filter(month(date)==5),aes(x=value,y=fit,col=year(date))) +
geom_point(alpha=0.5) +
scale_color_viridis_c(direction=-1) +
geom_abline(slope=1) +
labs(col="year",y= "fit (in mm.)", x = "true value (in mm.)")
print(p)
dev.off()
##### plot MSPE (all months and May) by corn belt location
tab.fit.byloc=tab.fit %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
tab.fit.byloc.all = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc) %>%
mutate(months="All months")
tab.fit.byloc.May=tab.fit %>%
dplyr::filter(month(date)==5) %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
tab.fit.byloc.all.May = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc.May) %>%
mutate(months="May")
png(paste0("figures/",model_name,"_mspe_byloc.png"),width=960,height=360)
p=rbind(tab.fit.byloc.all,tab.fit.byloc.all.May) %>%
ggplot() +
geom_point(aes(x=Lon,y=Lat,col=MSPE)) +
scale_color_viridis_c(direction=1) +
facet_wrap(. ~ months)
print(p)
dev.off()
}
#metrics_gen("persistence")
#metrics_gen("climatology")
#metrics_gen("funclm")
metrics_gen( "ANN2014" )
model_name <- "ANN2014"
tab.fit=read.csv(paste0("outputs/",model_name,"_fits.csv"))
tab.fit$date <- as.Date( tab.fit$date, '%m/%d/%Y' )
tab.fit$date
max(tab.fit$date)
dim( tab.fit)
head( tab.fit)
tab.fit=read.csv(paste0("outputs/",model_name,"_fits.csv"))
tab.fit$date <- as.Date( tab.fit$date, '%m/%d/%Y' )
max(tab.fit$date)
metrics_gen( "ANN2014" )
metrics_gen( "ANN2014PCA" )
metrics_gen( "ANN2015PCA" )
metrics_gen( "ANN2016PCA" )
metrics_gen( "ANN2014" )
metrics_gen( "ANN2015" )
metrics_gen( "ANN2016" )
metrics_gen( "ANNWidePCA")
metrics_gen( "ANNWide")
model_name <- "ANNWide"
tab.fit=read.csv(paste0("outputs/",model_name,"_fits.csv"))
tab.fit$date <- as.Date( tab.fit$date, '%m/%d/%Y' )
head( tab.fit )
## MSPE and R2
tab.MSPE=tab.fit %>%
dplyr::filter(date > date.in) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.MSPE
tab.fit[ tab.fit$date > date.in, ]
model_name = "ANN2014"
tab.fit=read.csv(paste0("outputs/",model_name,"_fits.csv"))
tab.fit$date <- as.Date( tab.fit$date, '%m/%d/%Y' )
## MSPE and R2
tab.MSPE=tab.fit %>%
dplyr::filter(date > date.in) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.R2=tab.fit %>%
dplyr::filter(date > date.in) %>%
summarise(R2=cor(value,fit)^2) %>% pull
## metrics only for May
tab.MSPE.May=tab.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.R2.May=tab.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
summarise(R2=cor(value,fit)^2) %>% pull
pers.MSPE=pers.fit %>%
dplyr::filter(date > date.in) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
pers.MSPE.May=pers.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.metrics=data.frame(period=c("ALL months","May"),
MSPE=c(tab.MSPE,tab.MSPE.May),R2=c(tab.R2,tab.R2.May)
,skill=c(1 - tab.MSPE/pers.MSPE,1 - tab.MSPE.May/pers.MSPE.May))
### skill score using persistence fits as baseline
pers.fit=read.csv(paste0("outputs/persistence_fits.csv"))
pers.MSPE=pers.fit %>%
dplyr::filter(date > date.in) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
pers.MSPE.May=pers.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.metrics=data.frame(period=c("ALL months","May"),
MSPE=c(tab.MSPE,tab.MSPE.May),R2=c(tab.R2,tab.R2.May)
,skill=c(1 - tab.MSPE/pers.MSPE,1 - tab.MSPE.May/pers.MSPE.May))
tab.fit.byloc=tab.fit %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
View(tab.fit.byloc)
tab.fit.byloc.all = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc) %>%
mutate(months="All months")
View(tab.fit.byloc.all)
tab.fit.byloc.May=tab.fit %>%
dplyr::filter(month(date)==5) %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
View(tab.fit.byloc.May)
tab.fit.byloc.all.May = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc.May) %>%
mutate(months="May")
View(tab.fit.byloc.all.May)
View(SoilMoisture.all)
head( SoilMoisture.all)
tab.fit.byloc.all = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat)
head( tab.fit.byloc.all)
head( tab.fit.byloc)
tab.fit.byloc=tab.fit %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
tab.fit.byloc.all = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc, by = sm_loc_id) %>%
mutate(months="All months")
tab.fit.byloc.all = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc, by = "sm_loc_id") %>%
mutate(months="All months")
tab.fit.byloc.all
tab.fit.byloc=tab.fit %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
tab.fit.byloc.all = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc, by = "sm_loc_id") %>%
mutate(months="All months")
tab.fit.byloc.May=tab.fit %>%
dplyr::filter(month(date)==5) %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
tab.fit.byloc.all.May = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc.May, by = "sm_loc_id") %>%
mutate(months="May")
p=rbind(tab.fit.byloc.all,tab.fit.byloc.all.May) %>%
ggplot() +
geom_point(aes(x=Lon,y=Lat,col=MSPE)) +
scale_color_viridis_c(direction=1) +
facet_wrap(. ~ months)
p
head( tab.fit.byloc)
head( tab.fit.byloc.all)
p=rbind(tab.fit.byloc.all,tab.fit.byloc.all.May) %>%
ggplot() +
geom_point(aes(x=Lon.x,y=Lat.x,col=MSPE)) +
scale_color_viridis_c(direction=1) +
facet_wrap(. ~ months)
p
p=rbind(tab.fit.byloc.all,tab.fit.byloc.all.May) %>%
ggplot() +
geom_point(aes(x=Lon.y,y=Lat.y,col=MSPE)) +
scale_color_viridis_c(direction=1) +
facet_wrap(. ~ months)
p
d1 <- read.csv("cornbelt.csv")
head( d1 )
head( d1[,1:10])
head( SoilMoisture.all[,1:10])
LatLonSm_SoilMoisture.all <- SoilMoisture.all[,c( "sm_loc_id", "Lon", "Lat") ]
n1 <- nrow( LatLonSm_SoilMoisture.all )
i <- 1
LatLonSm_SoilMoisture.all <- SoilMoisture.all[,c( "sm_loc_id", "Lon", "Lat") ]
n1 <- nrow( LatLonSm_SoilMoisture.all )
n11
n1
loc_hold1 <- LatLonSm_SoilMoisture.all[i,]
loc_hold1
head(LatLonSm_SoilMoisture.all )
tab.fit$sm_loc_id[ tab.fit$Lon == loc_hold1$Lon & tab.fit$Lat == loc_hold1$Lat] <- loc_hold1$sm_loc_id
tab.fit[ tab.fit$Lon == -125 & tab.fit$Lat == 40.5,]
nrows( tab.fit)
nrow( tab.fit)
tab.fit=read.csv(paste0("outputs/",model_name,"_fits.csv"))
tab.fit$date <- as.Date( tab.fit$date, '%m/%d/%Y' )
#Swap out the sm_loc_id from cornbelt.csv to sm_loc_id from SoilMoisture.all
LatLonSm_SoilMoisture.all <- SoilMoisture.all[,c( "sm_loc_id", "Lon", "Lat") ]
n1 <- nrow( LatLonSm_SoilMoisture.all )
for( i in 1:n1 ){
loc_hold1 <- LatLonSm_SoilMoisture.all[i,]
tab.fit$sm_loc_id[ tab.fit$Lon == loc_hold1$Lon & tab.fit$Lat == loc_hold1$Lat] <- loc_hold1$sm_loc_id
}
## MSPE and R2
tab.MSPE=tab.fit %>%
dplyr::filter(date > date.in) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.R2=tab.fit %>%
dplyr::filter(date > date.in) %>%
summarise(R2=cor(value,fit)^2) %>% pull
## metrics only for May
tab.MSPE.May=tab.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.R2.May=tab.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
summarise(R2=cor(value,fit)^2) %>% pull
### skill score using persistence fits as baseline
pers.fit=read.csv(paste0("outputs/persistence_fits.csv"))
pers.MSPE=pers.fit %>%
dplyr::filter(date > date.in) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
pers.MSPE.May=pers.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.metrics=data.frame(period=c("ALL months","May"),
MSPE=c(tab.MSPE,tab.MSPE.May),R2=c(tab.R2,tab.R2.May)
,skill=c(1 - tab.MSPE/pers.MSPE,1 - tab.MSPE.May/pers.MSPE.May))
tab.fit.byloc=tab.fit %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
tab.fit.byloc.all = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc) %>%
mutate(months="All months")
head( tab.fit.byloc.all)
tab.fit.byloc.May=tab.fit %>%
dplyr::filter(month(date)==5) %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
tab.fit.byloc.all.May = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc.May) %>%
mutate(months="May")
p=rbind(tab.fit.byloc.all,tab.fit.byloc.all.May) %>%
ggplot() +
geom_point(aes(x=Lon.y,y=Lat.y,col=MSPE)) +
scale_color_viridis_c(direction=1) +
facet_wrap(. ~ months)
p
p=rbind(tab.fit.byloc.all,tab.fit.byloc.all.May) %>%
ggplot() +
geom_point(aes(x=Lon,y=Lat,col=MSPE)) +
scale_color_viridis_c(direction=1) +
facet_wrap(. ~ months)
p
metrics_gen=function(model_name){
tab.fit=read.csv(paste0("outputs/",model_name,"_fits.csv"))
tab.fit$date <- as.Date( tab.fit$date, '%m/%d/%Y' )
#Swap out the sm_loc_id from cornbelt.csv to sm_loc_id from SoilMoisture.all
LatLonSm_SoilMoisture.all <- SoilMoisture.all[,c( "sm_loc_id", "Lon", "Lat") ]
n1 <- nrow( LatLonSm_SoilMoisture.all )
for( i in 1:n1 ){
loc_hold1 <- LatLonSm_SoilMoisture.all[i,]
tab.fit$sm_loc_id[ tab.fit$Lon == loc_hold1$Lon & tab.fit$Lat == loc_hold1$Lat] <- loc_hold1$sm_loc_id
}
## MSPE and R2
tab.MSPE=tab.fit %>%
dplyr::filter(date > date.in) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.R2=tab.fit %>%
dplyr::filter(date > date.in) %>%
summarise(R2=cor(value,fit)^2) %>% pull
## metrics only for May
tab.MSPE.May=tab.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.R2.May=tab.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
summarise(R2=cor(value,fit)^2) %>% pull
### skill score using persistence fits as baseline
pers.fit=read.csv(paste0("outputs/persistence_fits.csv"))
pers.MSPE=pers.fit %>%
dplyr::filter(date > date.in) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
pers.MSPE.May=pers.fit %>%
dplyr::filter(date > date.in,month(date)==5) %>%
transmute(error = (value-fit)^2) %>%
pull %>% mean
tab.metrics=data.frame(period=c("ALL months","May"),
MSPE=c(tab.MSPE,tab.MSPE.May),R2=c(tab.R2,tab.R2.May)
,skill=c(1 - tab.MSPE/pers.MSPE,1 - tab.MSPE.May/pers.MSPE.May))
write.csv(tab.metrics,paste0("metrics/",model_name,"_metrics.csv"),row.names = F,quote = F)
## scatterplot of fits
png(paste0("figures/",model_name,"_fits.png"),width = 480, height = 360)
p=ggplot(tab.fit,aes(x=value,y=fit,col=year(date))) +
geom_point(alpha=0.5) +
scale_color_viridis_c(direction=-1) +
geom_abline(slope=1) +
labs(col="year",y= "fit (in mm.)", x = "true value (in mm.)")
print(p)
dev.off()
## scatterplot of fits for May
png(paste0("figures/",model_name,"_fits_May.png"),width = 480, height = 360)
p=ggplot(tab.fit %>% dplyr::filter(month(date)==5),aes(x=value,y=fit,col=year(date))) +
geom_point(alpha=0.5) +
scale_color_viridis_c(direction=-1) +
geom_abline(slope=1) +
labs(col="year",y= "fit (in mm.)", x = "true value (in mm.)")
print(p)
dev.off()
##### plot MSPE (all months and May) by corn belt location
tab.fit.byloc=tab.fit %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
tab.fit.byloc.all = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc) %>%
mutate(months="All months")
tab.fit.byloc.May=tab.fit %>%
dplyr::filter(month(date)==5) %>%
select(sm_loc_id,Lon,Lat,value,fit) %>%
group_by(sm_loc_id) %>%
summarize(Lon=first(Lon),Lat=first(Lat),
MSPE=mean((value-fit)^2))
tab.fit.byloc.all.May = SoilMoisture.all %>%
select(sm_loc_id,Lon,Lat) %>%
left_join(tab.fit.byloc.May) %>%
mutate(months="May")
png(paste0("figures/",model_name,"_mspe_byloc.png"),width=960,height=360)
p=rbind(tab.fit.byloc.all,tab.fit.byloc.all.May) %>%
ggplot() +
geom_point(aes(x=Lon,y=Lat,col=MSPE)) +
scale_color_viridis_c(direction=1) +
facet_wrap(. ~ months)
print(p)
dev.off()
}
#metrics_gen("persistence")
#metrics_gen("climatology")
#metrics_gen("funclm")
metrics_gen( "ANN2014" )
